{"name":"面向对象编程","slug":"面向对象编程","count":6,"postlist":[{"title":"C++引用","slug":"C++引用","date":"2017-04-16T11:15:29.000Z","updated":"2018-04-22T15:01:05.453Z","comments":true,"path":"api/articles/C++引用.json","excerpt":"<h1 id=\"引用（普通引用）\"><a href=\"#引用（普通引用）\" class=\"headerlink\" title=\"引用（普通引用）\"></a>引用（普通引用）</h1><ul>\n<li><p>变量名回顾<br>变量名实质上是一段连续存储空间的别名，是一个标号(门牌号)<br>程序中通过变量来申请并命名内存空间<br>通过变量的名字可以使用存储空间</p>","keywords":null,"cover":null,"content":null,"text":"引用（普通引用）变量名回顾<br>变量名实质上是一段连续存储空间的别名，是一个标号(门牌号)<br>程序中通过变量来申请并命名内存空间<br>通过变量的名字可以使用存储空间问题1：对一段连续的内存空间只能取一个别名吗？1 引用概念在C++中新增加了引用的概念引用可以看作一个 已定","link":"","raw":null,"photos":[],"categories":[{"name":"面向对象编程","slug":"面向对象编程","count":6,"path":"api/categories/面向对象编程.json"}],"tags":[{"name":"Cpp对C的扩展","slug":"Cpp对C的扩展","count":6,"path":"api/tags/Cpp对C的扩展.json"}]},{"title":"C与C++中的const","slug":"C与C++中的const ","date":"2017-04-15T09:16:24.000Z","updated":"2018-04-22T13:36:36.598Z","comments":true,"path":"api/articles/C与C++中的const .json","excerpt":"<h1 id=\"const基础知识（用法、含义、好处）\"><a href=\"#const基础知识（用法、含义、好处）\" class=\"headerlink\" title=\"const基础知识（用法、含义、好处）\"></a>const基础知识（用法、含义、好处）</h1><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> <span class=\"keyword\">const</span> b;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> *c;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> * <span class=\"keyword\">const</span> d;</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> * <span class=\"keyword\">const</span> e ;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Int <span class=\"title\">func1</span><span class=\"params\">(<span class=\"keyword\">const</span>)</span></span></span><br></pre></td></tr></table></figure>\n<p>初级理解：const是定义常量==》const意味着只读<br>","keywords":null,"cover":null,"content":null,"text":"const基础知识（用法、含义、好处）1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>int main()<br>&#123;<br>\tconst int a;<br>\tint const ","link":"","raw":null,"photos":[],"categories":[{"name":"面向对象编程","slug":"面向对象编程","count":6,"path":"api/categories/面向对象编程.json"}],"tags":[{"name":"Cpp对C的扩展","slug":"Cpp对C的扩展","count":6,"path":"api/tags/Cpp对C的扩展.json"}]},{"title":"C++对C的加强","slug":"C++对C的加强","date":"2017-04-13T12:03:16.000Z","updated":"2018-04-22T12:54:17.361Z","comments":true,"path":"api/articles/C++对C的加强.json","excerpt":"<h1 id=\"一-namespace命名空间\"><a href=\"#一-namespace命名空间\" class=\"headerlink\" title=\"一.namespace命名空间\"></a>一.namespace命名空间</h1><h2 id=\"1-C-命名空间基本常识\"><a href=\"#1-C-命名空间基本常识\" class=\"headerlink\" title=\"1 C++命名空间基本常识\"></a>1 C++命名空间基本常识</h2><p>所谓<code>namespace</code>，是指<strong>标识符的各种可见范围</strong>。C++标准程序库中的所有标识符都被定义于一个名为std的namespace中。</p>","keywords":null,"cover":null,"content":null,"text":"一.namespace命名空间1 C++命名空间基本常识所谓namespace，是指标识符的各种可见范围。C++标准程序库中的所有标识符都被定义于一个名为std的namespace中。&lt;iostream&gt;和&lt;iostream.h&gt;格式不一样，前者没有后缀，","link":"","raw":null,"photos":[],"categories":[{"name":"面向对象编程","slug":"面向对象编程","count":6,"path":"api/categories/面向对象编程.json"}],"tags":[{"name":"Cpp对C的扩展","slug":"Cpp对C的扩展","count":6,"path":"api/tags/Cpp对C的扩展.json"}]},{"title":"C语言和C++语言关系","slug":"C语言与C++的关系","date":"2017-04-12T09:43:06.000Z","updated":"2018-04-22T11:28:23.277Z","comments":true,"path":"api/articles/C语言与C++的关系.json","excerpt":"<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p><strong>C++：1.以C语言为基础。2.面向对象支持。3.类型、函数加强。4.异常处理。</strong></p>","keywords":null,"cover":null,"content":null,"text":"总结C++：1.以C语言为基础。2.面向对象支持。3.类型、函数加强。4.异常处理。C语言是在实践的过程中逐步完善起来的<br>没有深思熟虑的设计过程<br>使用时存在很多“灰色地带”<br>残留量过多低级语言的特征<br>直接利用指针进行内存操作C语言的目标是高效<br>最终程","link":"","raw":null,"photos":[],"categories":[{"name":"面向对象编程","slug":"面向对象编程","count":6,"path":"api/categories/面向对象编程.json"}],"tags":[{"name":"Cpp对C的扩展","slug":"Cpp对C的扩展","count":6,"path":"api/tags/Cpp对C的扩展.json"}]},{"title":"程序设计方法的发展历程","slug":"程序设计方法的发展历程","date":"2017-04-11T10:21:27.000Z","updated":"2018-04-22T09:57:42.664Z","comments":true,"path":"api/articles/程序设计方法的发展历程.json","excerpt":"<h1 id=\"面向过程的结构化程序设计方法\"><a href=\"#面向过程的结构化程序设计方法\" class=\"headerlink\" title=\"面向过程的结构化程序设计方法\"></a>面向过程的结构化程序设计方法</h1><p>设计思路<br>    –自顶向下、逐步求精。采用模块分解与功能抽象，自顶向下、分而治之。</p>","keywords":null,"cover":null,"content":null,"text":"面向过程的结构化程序设计方法设计思路<br>    –自顶向下、逐步求精。采用模块分解与功能抽象，自顶向下、分而治之。程序结构：<br>    –按功能划分为若干个基本模块，形成一个树状结构。<br>    –各模块间的关系尽可能简单，功能上相对独立；每一模块内部均是由顺序、选择","link":"","raw":null,"photos":[],"categories":[{"name":"面向对象编程","slug":"面向对象编程","count":6,"path":"api/categories/面向对象编程.json"}],"tags":[{"name":"Cpp对C的扩展","slug":"Cpp对C的扩展","count":6,"path":"api/tags/Cpp对C的扩展.json"}]},{"title":"简单的C++程序","slug":"简单的C++程序","date":"2017-04-10T09:19:27.000Z","updated":"2018-04-22T10:12:43.469Z","comments":true,"path":"api/articles/简单的C++程序.json","excerpt":"<p><strong> 求元的周长和面积 与 初学者易犯错误模型 </strong><br>","keywords":null,"cover":null,"content":null,"text":" 求元的周长和面积 与 初学者易犯错误模型 <br>1.1 求元的周长和面积数据描述：<br>        半径，周长，面积均用实型数表示<br>数据处理：<br>        输入半径 r；<br>        计算周长 = 2πr ；<br>        计算面积 =","link":"","raw":null,"photos":[],"categories":[{"name":"面向对象编程","slug":"面向对象编程","count":6,"path":"api/categories/面向对象编程.json"}],"tags":[{"name":"Cpp对C的扩展","slug":"Cpp对C的扩展","count":6,"path":"api/tags/Cpp对C的扩展.json"}]}]}