{"name":"编译器工具","slug":"编译器工具","count":1,"postlist":[{"title":"02_程序设计方法的发展历程","slug":"CSCOPE的安装","date":"2017-04-11T10:21:27.000Z","updated":"2018-08-22T08:54:31.458Z","comments":true,"path":"api/articles/CSCOPE的安装.json","excerpt":"","keywords":null,"cover":null,"content":"<p>#简介：<br>Cscope是类似于ctags一样的工具，但可以认为她是ctags的增强版，因为她比ctags能够做更多的事。在Vim中，通过cscope的查询，跳转到指定的地方就像跳转到任何标签；她能够保存标签栈，所以通过合适的键盘映射绑定，你能够在函数向后或向前跳转，就像通常使用的tags一样。</p>\n<h1 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1 安装\"></a>1 安装</h1><h2 id=\"1-1-下载\"><a href=\"#1-1-下载\" class=\"headerlink\" title=\"1.1 下载\"></a>1.1 下载</h2><p><a href=\"http://cscope.sourceforge.net/\" target=\"_blank\" rel=\"noopener\">点此下载</a><br>如果你的计算机上没有cscope，你可以在此处下载它，在写本文时，它的最新版本是15.9。mac中可以用homebrew一键安装。</p>\n<h2 id=\"1-2-安装\"><a href=\"#1-2-安装\" class=\"headerlink\" title=\"1.2 安装\"></a>1.2 安装</h2><h3 id=\"1-2-1解压\"><a href=\"#1-2-1解压\" class=\"headerlink\" title=\"1.2.1解压\"></a>1.2.1解压</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf cscope-15.9.tar.gz</span><br><span class=\"line\">cd cscope-15.9</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">/*error：没有curses.h, 解决方案sudo apt-get install ncurses-dev*/</span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<h1 id=\"2-配置\"><a href=\"#2-配置\" class=\"headerlink\" title=\"2 配置\"></a>2 配置</h1><p>修改<code>vim</code>配置文件<code>vimrc</code>.你可以修改<code>/etc/vimrc</code>使用所有用户都使用本配置文件，当然你还可以修改<code>~/.vimrc</code> </p>\n<p>下载配置文件：<a href=\"http://vim-scripts.org/vim/scripts.html\" target=\"_blank\" rel=\"noopener\">cscope_map.vim</a>(可使<code>cscope</code>递归查询)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class=\"line\">&quot; CSCOPE settings for vim           </span><br><span class=\"line\">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; This file contains some boilerplate settings for vim&apos;s cscope interface,</span><br><span class=\"line\">&quot; plus some keyboard mappings that I&apos;ve found useful.</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; USAGE: </span><br><span class=\"line\">&quot; -- vim 6:     Stick this file in your ~/.vim/plugin directory (or in a</span><br><span class=\"line\">&quot;               &apos;plugin&apos; directory in some other directory that is in your</span><br><span class=\"line\">&quot;               &apos;runtimepath&apos;.</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; -- vim 5:     Stick this file somewhere and &apos;source cscope.vim&apos; it from</span><br><span class=\"line\">&quot;               your ~/.vimrc file (or cut and paste it into your .vimrc).</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; NOTE: </span><br><span class=\"line\">&quot; These key maps use multiple keystrokes (2 or 3 keys).  If you find that vim</span><br><span class=\"line\">&quot; keeps timing you out before you can complete them, try changing your timeout</span><br><span class=\"line\">&quot; settings, as explained below.</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; Happy cscoping,</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; Jason Duell       jduell@alumni.princeton.edu     2002/3/7</span><br><span class=\"line\">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; This tests to see if vim was configured with the &apos;--enable-cscope&apos; option</span><br><span class=\"line\">&quot; when it was compiled.  If it wasn&apos;t, time to recompile vim... </span><br><span class=\"line\">if has(&quot;cscope&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot; Standard cscope/vim boilerplate</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot; use both cscope and ctag for &apos;ctrl-]&apos;, &apos;:ta&apos;, and &apos;vim -t&apos;</span><br><span class=\"line\">    set cscopetag</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot; check cscope for definition of a symbol before checking ctags: set to 1</span><br><span class=\"line\">    &quot; if you want the reverse search order.</span><br><span class=\"line\">    set csto=0</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot; add any cscope database in current directory</span><br><span class=\"line\">    if filereadable(&quot;cscope.out&quot;)</span><br><span class=\"line\">        cs add cscope.out  </span><br><span class=\"line\">    &quot; else add the database pointed to by environment variable </span><br><span class=\"line\">    elseif $CSCOPE_DB != &quot;&quot;</span><br><span class=\"line\">        cs add $CSCOPE_DB</span><br><span class=\"line\">    endif</span><br><span class=\"line\"></span><br><span class=\"line\">    &quot; show msg when any other cscope db added</span><br><span class=\"line\">    set cscopeverbose  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot; My cscope/vim key mappings</span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot; The following maps all invoke one of the following cscope search types:</span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot;   &apos;s&apos;   symbol: find all references to the token under cursor</span><br><span class=\"line\">    &quot;   &apos;g&apos;   global: find global definition(s) of the token under cursor</span><br><span class=\"line\">    &quot;   &apos;c&apos;   calls:  find all calls to the function name under cursor</span><br><span class=\"line\">    &quot;   &apos;t&apos;   text:   find all instances of the text under cursor</span><br><span class=\"line\">    &quot;   &apos;e&apos;   egrep:  egrep search for the word under cursor</span><br><span class=\"line\">    &quot;   &apos;f&apos;   file:   open the filename under cursor</span><br><span class=\"line\">    &quot;   &apos;i&apos;   includes: find files that include the filename under cursor</span><br><span class=\"line\">    &quot;   &apos;d&apos;   called: find functions that function under cursor calls</span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot; Below are three sets of the maps: one set that just jumps to your</span><br><span class=\"line\">    &quot; search result, one that splits the existing vim window horizontally and</span><br><span class=\"line\">    &quot; diplays your search result in the new window, and one that does the same</span><br><span class=\"line\">    &quot; thing, but does a vertical split instead (vim 6 only).</span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot; I&apos;ve used CTRL-\\ and CTRL-@ as the starting keys for these maps, as it&apos;s</span><br><span class=\"line\">    &quot; unlikely that you need their default mappings (CTRL-\\&apos;s default use is</span><br><span class=\"line\">    &quot; as part of CTRL-\\ CTRL-N typemap, which basically just does the same</span><br><span class=\"line\">    &quot; thing as hitting &apos;escape&apos;: CTRL-@ doesn&apos;t seem to have any default use).</span><br><span class=\"line\">    &quot; If you don&apos;t like using &apos;CTRL-@&apos; or CTRL-\\, , you can change some or all</span><br><span class=\"line\">    &quot; of these maps to use other keys.  One likely candidate is &apos;CTRL-_&apos;</span><br><span class=\"line\">    &quot; (which also maps to CTRL-/, which is easier to type).  By default it is</span><br><span class=\"line\">    &quot; used to switch between Hebrew and English keyboard mode.</span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot; All of the maps involving the &lt;cfile&gt; macro use &apos;^&lt;cfile&gt;$&apos;: this is so</span><br><span class=\"line\">    &quot; that searches over &apos;#include &lt;time.h&gt;&quot; return only references to</span><br><span class=\"line\">    &quot; &apos;time.h&apos;, and not &apos;sys/time.h&apos;, etc. (by default cscope will return all</span><br><span class=\"line\">    &quot; files that contain &apos;time.h&apos; as part of their name).</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &quot; To do the first type of search, hit &apos;CTRL-\\&apos;, followed by one of the</span><br><span class=\"line\">    &quot; cscope search types above (s,g,c,t,e,f,i,d).  The result of your cscope</span><br><span class=\"line\">    &quot; search will be displayed in the current window.  You can use CTRL-T to</span><br><span class=\"line\">    &quot; go back to where you were before the search.  </span><br><span class=\"line\">    &quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    nmap &lt;C-\\&gt;s :cs find s &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-\\&gt;g :cs find g &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-\\&gt;c :cs find c &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-\\&gt;t :cs find t &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-\\&gt;e :cs find e &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-\\&gt;f :cs find f &lt;C-R&gt;=expand(&quot;&lt;cfile&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-\\&gt;i :cs find i ^&lt;C-R&gt;=expand(&quot;&lt;cfile&gt;&quot;)&lt;CR&gt;$&lt;CR&gt;</span><br><span class=\"line\">    nmap &lt;C-\\&gt;d :cs find d &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &quot; Using &apos;CTRL-spacebar&apos; (intepreted as CTRL-@ by vim) then a search type</span><br><span class=\"line\">    &quot; makes the vim window split horizontally, with search result displayed in</span><br><span class=\"line\">    &quot; the new window.</span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot; (Note: earlier versions of vim may not have the :scs command, but it</span><br><span class=\"line\">    &quot; can be simulated roughly via:</span><br><span class=\"line\">    &quot;    nmap &lt;C-@&gt;s &lt;C-W&gt;&lt;C-S&gt; :cs find s &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\"></span><br><span class=\"line\">    nmap &lt;C-@&gt;s :scs find s &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-@&gt;g :scs find g &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-@&gt;c :scs find c &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-@&gt;t :scs find t &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-@&gt;e :scs find e &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-@&gt;f :scs find f &lt;C-R&gt;=expand(&quot;&lt;cfile&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-@&gt;i :scs find i ^&lt;C-R&gt;=expand(&quot;&lt;cfile&gt;&quot;)&lt;CR&gt;$&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-@&gt;d :scs find d &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &quot; Hitting CTRL-space *twice* before the search type does a vertical </span><br><span class=\"line\">    &quot; split instead of a horizontal one (vim 6 and up only)</span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot; (Note: you may wish to put a &apos;set splitright&apos; in your .vimrc</span><br><span class=\"line\">    &quot; if you prefer the new window on the right instead of the left</span><br><span class=\"line\"></span><br><span class=\"line\">    nmap &lt;C-@&gt;&lt;C-@&gt;s :vert scs find s &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">    nmap &lt;C-@&gt;&lt;C-@&gt;g :vert scs find g &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">    nmap &lt;C-@&gt;&lt;C-@&gt;c :vert scs find c &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">    nmap &lt;C-@&gt;&lt;C-@&gt;t :vert scs find t &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">    nmap &lt;C-@&gt;&lt;C-@&gt;e :vert scs find e &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\">    nmap &lt;C-@&gt;&lt;C-@&gt;f :vert scs find f &lt;C-R&gt;=expand(&quot;&lt;cfile&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-@&gt;&lt;C-@&gt;i :vert scs find i ^&lt;C-R&gt;=expand(&quot;&lt;cfile&gt;&quot;)&lt;CR&gt;$&lt;CR&gt;\t</span><br><span class=\"line\">    nmap &lt;C-@&gt;&lt;C-@&gt;d :vert scs find d &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot; key map timeouts</span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot; By default Vim will only wait 1 second for each keystroke in a mapping.</span><br><span class=\"line\">    &quot; You may find that too short with the above typemaps.  If so, you should</span><br><span class=\"line\">    &quot; either turn off mapping timeouts via &apos;notimeout&apos;.</span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot;set notimeout </span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot; Or, you can keep timeouts, by uncommenting the timeoutlen line below,</span><br><span class=\"line\">    &quot; with your own personal favorite value (in milliseconds):</span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot;set timeoutlen=4000</span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot; Either way, since mapping timeout settings by default also set the</span><br><span class=\"line\">    &quot; timeouts for multicharacter &apos;keys codes&apos; (like &lt;F1&gt;), you should also</span><br><span class=\"line\">    &quot; set ttimeout and ttimeoutlen: otherwise, you will experience strange</span><br><span class=\"line\">    &quot; delays as vim waits for a keystroke after you hit ESC (it will be</span><br><span class=\"line\">    &quot; waiting to see if the ESC is actually part of a key code like &lt;F1&gt;).</span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot;set ttimeout </span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot; personally, I find a tenth of a second to work well for key code</span><br><span class=\"line\">    &quot; timeouts. If you experience problems and have a slow terminal or network</span><br><span class=\"line\">    &quot; connection, set it higher.  If you don&apos;t set ttimeoutlen, the value for</span><br><span class=\"line\">    &quot; timeoutlent (default: 1000 = 1 second, which is sluggish) is used.</span><br><span class=\"line\">    &quot;</span><br><span class=\"line\">    &quot;set ttimeoutlen=100</span><br><span class=\"line\"></span><br><span class=\"line\">endif</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>把<code>cscope_map.vim</code>里从<code>if has(&quot;cscope&quot;)</code>  到 <code>endif</code>里边的内容复制到<code>/etc/vimrc</code>里边去 </li>\n<li>里边的命令意思请看下边文章 </li>\n<li><code>cscope_map.vim</code>说明： <blockquote>\n<ol>\n<li>有英文注释的我就不说明了，我就说一下里边的键<code>map</code>映射 </li>\n<li>如：<code>nmap &lt;C-\\\\&gt;s :cs find s &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;</code><blockquote>\n<ul>\n<li><code>nmap</code>表示在<code>vim</code>的普通模式下，即相对于<code>:</code>编辑模块和可视模式，以下是几种模式 </li>\n<li><code>:map</code> 普通，可视模式及操作符等待模式<br><code>:vmap</code>可视模式<br><code>:omap</code>操作符等待模式<br><code>:map!</code>插入和命令行模式<br><code>:imap</code>插入模式<br><code>:cmap</code>命令行模式 </li>\n<li><code>&lt;C-\\\\&gt;</code>表示：<code>Ctrl+\\\\</code></li>\n<li><code>s</code>表示输入(即按：<code>s</code>)<code>s</code> </li>\n<li><code>:</code> 表示输入<code>\\&#39;:\\&#39;</code></li>\n<li><code>&quot;cs find s&quot;</code>表示输入<code>&quot;cs find s&quot;</code>也即是要输入的命令 </li>\n<li><code>&lt;C-R&gt;=expand(&quot;cword&quot;)</code>总体是为了得到：光标下的变量或函数。<code>cword</code>表示：<code>cursor word</code>, 类似的还有<code>:cfile</code>表示光标所在处的文件名吧 </li>\n<li><code>＜CR＞`</code>＜CR＞`就是回车吧，不太清楚</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n<h1 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2 使用\"></a>2 使用</h1><h2 id=\"2-1-手动加载cscope-out库\"><a href=\"#2-1-手动加载cscope-out库\" class=\"headerlink\" title=\"2.1 手动加载cscope.out库\"></a>2.1 手动加载cscope.out库</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:cs add /home/test/myWork/cscope.out</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-2-vimrc中加载\"><a href=\"#2-2-vimrc中加载\" class=\"headerlink\" title=\"2.2 ~/.vimrc中加载\"></a>2.2 ~/.vimrc中加载</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> vim ~/.vimrc</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if has(&quot;cscope&quot;) &amp;&amp; filereadable(&quot;/usr/bin/cscope&quot;)</span><br><span class=\"line\">   set csprg=/usr/bin/cscope</span><br><span class=\"line\">   set csto=0</span><br><span class=\"line\">   set cst </span><br><span class=\"line\">   set nocsverb</span><br><span class=\"line\">   &quot; add any database in current directory</span><br><span class=\"line\">   if filereadable(&quot;/home/test/myWork/cscope.out&quot;)</span><br><span class=\"line\">      cs add /home/test/myWork/cscope.out</span><br><span class=\"line\">   endif</span><br><span class=\"line\">endif</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-3-常规使用\"><a href=\"#2-3-常规使用\" class=\"headerlink\" title=\"2.3 常规使用\"></a>2.3 常规使用</h2><blockquote>\n<p>如果只希望 <code>Cscope</code> 关联起所有的 <code>.c</code> 文件，那么可以直接到工程的根目录下，输入：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cscope -Rbq</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><code>-R</code> 表示递归地把所有子文件夹中的<code>source file</code>也关联进来<br><code>-b</code> 表示只建立数据库文件 <code>cscope.out</code>，不进入<code>Cscope</code> 的 <code>GUI</code> 界面<br><code>-q</code> 会建立两个额外的 <code>&#39;inverted index&#39; file： cscope.in.out</code> 和 <code>cscope.po.out</code>，以加快查找的速度<br><code>-k</code> 如果不希望把 <code>/usr/include</code> 中被工程文件包含的<code>.h</code> 文件关联进来，就加 <code>-k</code></p>\n<h2 id=\"文件内命令\"><a href=\"#文件内命令\" class=\"headerlink\" title=\"文件内命令\"></a>文件内命令</h2><ul>\n<li>在源码根目录下打开任意<code>.c</code>文件，使用如下命令： <blockquote>\n<ul>\n<li><code>Ctrl+]</code>将跳到光标所在变量或函数的定义处 Ctrl+T返回 </li>\n<li><code>：cs find s</code> —- 查找C语言符号，即查找函数名、宏、枚举值等出现的地方<br><code>：cs find g</code> —- 查找函数、宏、枚举等定义的位置，类似ctags所提供的功能<br><code>：cs find d</code> —- 查找本函数调用的函数<br><code>：cs find c</code> —- 查找调用本函数的函数<br><code>：cs find t:</code> —- 查找指定的字符串<br><code>：cs find e</code> —- 查找egrep模式，相当于egrep功能，但查找速度快多了<br><code>：cs find f</code> —- 查找并打开文件，类似vim的find功能<br><code>：cs find i</code> —- 查找包含本文件的文 </li>\n</ul>\n</blockquote>\n</li>\n<li>以上的所以命令也可以快捷键来实现： <blockquote>\n<ul>\n<li><code>Ctrl+\\\\</code> 再按<code>s</code>表示<code>：cs find s</code>命令 </li>\n<li>同理实现<code>cs find + g,d,c,t,e,f,i</code>命令 </li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"2-4-关联其他类型的文件\"><a href=\"#2-4-关联其他类型的文件\" class=\"headerlink\" title=\"2.4 关联其他类型的文件\"></a>2.4 关联其他类型的文件</h2><blockquote>\n<p>如果要关联其他类型的文件（如 <code>.cpp</code>、<code>.java</code>等），就需要我们自己先生成一个 <code>cscope.files</code>，把所有我们希望关联进去的文件都列在里面：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> find /home/GuoHowe/nbd/nbd-2.9.15/ -name '*.c' -o -name '*.cpp' -o -name '*.h' &gt; /home/GuoHowe/cscope.files</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>注意查找的路径一定要写成绝对路径，这样才能保证写入到<code>cscope.files</code> 文件中的也是绝对路径。<br>之后就可以根据 <code>cscope.files</code> 建立数据库了：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cscope -bq -i /home/edelweiss/cscope.files</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-5-改动\"><a href=\"#2-5-改动\" class=\"headerlink\" title=\"2.5 改动\"></a>2.5 改动</h2><blockquote>\n<p>如果生成数据库文件后，工程中的代码有所改动，最好重新生成一次那三个文件，否则查找結果可能与实际不匹配。<br>查看代码时常用的快捷键是 <code>Ctrl+\\ s</code>（按住<code>Ctrl</code> 不放，同时按 <code>\\</code>，然后全部松开，按 <code>s</code>）。将光标放到想要查看所有出现位置的<code>CSymbol</code> 上，按下上述快捷键，屏幕下方就会出现一个列表，输入序号并回车就能到达想去的地方。按下<code>Ctrl+t</code> 可回到搜索前的位置。<br>直接在命令行查找可输入 <code>“:cs f s symbol_name”</code><br>其他用法可以输入 <code>“:cs”</code> 查看或者参阅 <code>manpage</code> 和官网上的 <code>Vim/Cscope Tutorial</code>。</p>\n</blockquote>\n","text":"#简介：<br>Cscope是类似于ctags一样的工具，但可以认为她是ctags的增强版，因为她比ctags能够做更多的事。在Vim中，通过cscope的查询，跳转到指定的地方就像跳转到任何标签；她能够保存标签栈，所以通过合适的键盘映射绑定，你能够在函数向后或向前跳转，就像通常","link":"","raw":null,"photos":[],"categories":[{"name":"编译器工具","slug":"编译器工具","count":1,"path":"api/categories/编译器工具.json"}],"tags":[{"name":"VIM","slug":"VIM","count":1,"path":"api/tags/VIM.json"}]}]}