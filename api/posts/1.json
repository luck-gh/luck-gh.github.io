{"total":23,"pageSize":5,"pageCount":5,"data":[{"title":"SPIFLASH","slug":"UBOOT/SPIFLASH","date":"2018-05-30T12:14:50.000Z","updated":"2018-09-28T07:39:53.840Z","comments":true,"path":"api/articles/UBOOT/SPIFLASH.json","excerpt":"<p><code>FLASH</code>存储器又称闪存，它结合了<code>ROM</code>和<code>RAM</code>的长处，不仅具备电子可擦除可编程（<code>EEPROM</code>）的性能，还可以快速读取数据（<code>NVRAM</code>的优势），使数据不会因为断电而丢失。 </p>","keywords":null,"cover":null,"content":null,"text":"FLASH存储器又称闪存，它结合了ROM和RAM的长处，不仅具备电子可擦除可编程（EEPROM）的性能，还可以快速读取数据（NVRAM的优势），使数据不会因为断电而丢失。 FLASH简介特性FLASH存储器又称闪存，它结合了ROM和RAM的长处，不仅具备电子可擦除可编程（EEPR","link":"","raw":null,"photos":[],"categories":[{"name":"SPIFLASH","slug":"SPIFLASH","count":1,"path":"api/categories/SPIFLASH.json"}],"tags":[{"name":"SPIFLASH","slug":"SPIFLASH","count":1,"path":"api/tags/SPIFLASH.json"}]},{"title":"BOOTROM的UP_FILE模式流程","slug":"UBOOT/up_file","date":"2018-05-28T08:01:06.000Z","updated":"2018-09-15T04:21:32.154Z","comments":true,"path":"api/articles/UBOOT/up_file.json","excerpt":"<p>BootRom是固化在芯片内部的一段代码，用于引导启动UBOOT，是开机启动的最重要阶段。</p>","keywords":null,"cover":null,"content":null,"text":"BootRom是固化在芯片内部的一段代码，用于引导启动UBOOT，是开机启动的最重要阶段。BOOTROM状态查询获取地址BOOTMODE_BASE(0x00 60 18 08)内的数据。<br>其中第零与第一位表示bootrom状态选择。=3<br>       FLIASH启动","link":"","raw":null,"photos":[],"categories":[{"name":"bootrom","slug":"bootrom","count":2,"path":"api/categories/bootrom.json"}],"tags":[{"name":"bootrom","slug":"bootrom","count":3,"path":"api/tags/bootrom.json"}]},{"title":"Uboot的MAKEFILE","slug":"UBOOT/UBOOT的Makefile","date":"2018-05-28T00:05:15.000Z","updated":"2018-09-15T04:25:55.017Z","comments":true,"path":"api/articles/UBOOT/UBOOT的Makefile.json","excerpt":"<p>UBOOT是开机启动的第二阶段，用于更新或引导。</p>","keywords":null,"cover":null,"content":null,"text":"UBOOT是开机启动的第二阶段，用于更新或引导。U-Boot 配置过程一、定义主机系统架构1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>HOSTARCH := $(shell uname -m | \\<br>       sed -e s/i.8","link":"","raw":null,"photos":[],"categories":[{"name":"Uboot","slug":"Uboot","count":1,"path":"api/categories/Uboot.json"}],"tags":[{"name":"Uboot","slug":"Uboot","count":1,"path":"api/tags/Uboot.json"}]},{"title":"bootrom的crt0.S","slug":"UBOOT/阅读crt0.S","date":"2018-05-27T05:34:06.000Z","updated":"2018-09-15T04:16:55.451Z","comments":true,"path":"api/articles/UBOOT/阅读crt0.S.json","excerpt":"<p>汇编的阅读是一个非常枯燥乏味的过程，并且每个不同的芯片都有不同的汇编语言，一切以手册为准。</p>","keywords":null,"cover":null,"content":null,"text":"汇编的阅读是一个非常枯燥乏味的过程，并且每个不同的芯片都有不同的汇编语言，一切以手册为准。1<br>2<br>3<br>4<br>.macro vector name    <br>.align 2<br>j OS_Trap_\\name<br>.endm<br>使用注意：<br>","link":"","raw":null,"photos":[],"categories":[{"name":"汇编","slug":"汇编","count":2,"path":"api/categories/汇编.json"}],"tags":[{"name":"bootrom","slug":"bootrom","count":3,"path":"api/tags/bootrom.json"}]},{"title":"连接脚本浅谈","slug":"UBOOT/链接脚本浅谈","date":"2018-05-26T03:54:32.000Z","updated":"2018-09-15T04:17:53.216Z","comments":true,"path":"api/articles/UBOOT/链接脚本浅谈.json","excerpt":"<p>对于<code>.lds</code>文件，它定义了整个程序编译之后的连接过程，决定了一个可执行程序的各个段的存储位置。虽然现在我还没怎么用它，但感觉还是挺重要的，有必要了解一下。</p>","keywords":null,"cover":null,"content":null,"text":"对于.lds文件，它定义了整个程序编译之后的连接过程，决定了一个可执行程序的各个段的存储位置。虽然现在我还没怎么用它，但感觉还是挺重要的，有必要了解一下。一、概论每一个链接过程^1.1  都由链接脚本[^1.2]控制。链接脚本主要用于规定如何把输入文件内的section放入输出文","link":"","raw":null,"photos":[],"categories":[{"name":"链接脚本","slug":"链接脚本","count":1,"path":"api/categories/链接脚本.json"}],"tags":[{"name":"链接脚本","slug":"链接脚本","count":1,"path":"api/tags/链接脚本.json"}]}]}