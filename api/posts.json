{"total":13,"pageSize":5,"pageCount":3,"data":[{"title":"模拟实现DNS解析过程","slug":"项目/应用层/DNS Project","date":"2018-05-23T08:29:09.100Z","updated":"2018-05-29T13:57:27.055Z","comments":true,"path":"api/articles/项目/应用层/DNS Project.json","excerpt":"<p><strong> 主要知识点：</strong></p>\n<ol>\n<li><a href=\"http://www.xker.com/page/e2008/0418/52162.html\" target=\"_blank\" rel=\"noopener\">Linux 环境下的 Socket 编程</a></li>\n<li><a href=\"http://blog.csdn.net/crazw/article/details/8986504\" target=\"_blank\" rel=\"noopener\">DNS 解析过程详解</a></li>\n<li><a href=\"https://blog.csdn.net/tianxuhong/article/details/74922454\" target=\"_blank\" rel=\"noopener\">DNS报文解析</a>","keywords":null,"cover":null,"content":null,"text":" 主要知识点：Linux 环境下的 Socket 编程DNS 解析过程详解DNS报文解析","link":"","raw":null,"photos":[],"categories":[{"name":"DNS","slug":"DNS","count":1,"path":"api/categories/DNS.json"}],"tags":[{"name":"Socket","slug":"Socket","count":1,"path":"api/tags/Socket.json"}]},{"title":"电子纸驱动的编写","slug":"项目/底层/电子纸驱动","date":"2018-05-10T06:00:15.000Z","updated":"2018-05-29T13:54:53.240Z","comments":true,"path":"api/articles/项目/底层/电子纸驱动.json","excerpt":"<p><strong> “十三五“规划提出大数据概念无疑将推动物联网的进程，互联网+的口号提出将为更多的设备加入网络提供政策支持，绿色环保也在其中，具备超低功耗特性的微控制器也将大展宏图。ST目前一共推出三个超低功耗系列的MCU：STM32L0(Cortex-M0/M0+)、STM32L1（Cortex-M3）、STM32L4(Cortex-M4)。STM32L0系列STM32微控制器让客户能够取得前所未有的低功耗，整合高能效的ARM Cortex®-M0+内核、优化架构、电源管理模式、超低功耗外设、支持节能型USB功能、独有的超低功耗制造工艺。</strong><br>","keywords":null,"cover":"https://wx1.sinaimg.cn/mw690/0079ID0Dly1frkatehzeij31kw16oqv8.jpg","content":null,"text":" “十三五“规划提出大数据概念无疑将推动物联网的进程，互联网+的口号提出将为更多的设备加入网络提供政策支持，绿色环保也在其中，具备超低功耗特性的微控制器也将大展宏图。ST目前一共推出三个超低功耗系列的MCU：STM32L0(Cortex-M0/M0+)、STM32L1（Corte","link":"","raw":null,"photos":[],"categories":[{"name":"电子纸","slug":"电子纸","count":1,"path":"api/categories/电子纸.json"}],"tags":[{"name":"STM32","slug":"STM32","count":1,"path":"api/tags/STM32.json"}]},{"title":"ARM_01_嵌入式系统概述","slug":"ARM/ARM_01","date":"2018-02-01T06:00:15.000Z","updated":"2018-06-04T13:25:39.909Z","comments":true,"path":"api/articles/ARM/ARM_01.json","excerpt":"<p><strong>1 嵌入式的概念</strong> √<br><strong>2 嵌入式系统的特点</strong> √<br><strong>3 嵌入式系统的组成</strong> √<br><strong>4 ARM内核种类</strong> √<br><strong>5 ARM内核内部的寄存器</strong> √</p>","keywords":null,"cover":null,"content":null,"text":"1 嵌入式的概念 √<br>2 嵌入式系统的特点 √<br>3 嵌入式系统的组成 √<br>4 ARM内核种类 √<br>5 ARM内核内部的寄存器 √前言我对于ARM的学习是基于ARM公司 CotexA9 架构处理器核心 samsung（三星公司） 提供的一款型号为 Exyno","link":"","raw":null,"photos":[],"categories":[{"name":"嵌入式","slug":"嵌入式","count":1,"path":"api/categories/嵌入式.json"}],"tags":[{"name":"ARM","slug":"ARM","count":1,"path":"api/tags/ARM.json"}]},{"title":"08_C++对C的扩展-终","slug":"C++/C++对C的扩展-终","date":"2017-04-19T12:58:03.000Z","updated":"2018-04-23T16:19:15.427Z","comments":true,"path":"api/articles/C++/C++对C的扩展-终.json","excerpt":"<p><strong>1  C++语言对C语言扩充和增强的几点具体体现</strong> √<br><strong>2 C语言register关键字—最快的关键字</strong> √</p>","keywords":null,"cover":null,"content":null,"text":"1  C++语言对C语言扩充和增强的几点具体体现 √<br>2 C语言register关键字—最快的关键字 √一. C++语言对C语言扩充和增强的几点具体体现1 更加灵活的变量说明在传统的语言中，局部支量的说明必须集中放在执行代码的前面（早期C标准），数据说明语句和执行语句的混合","link":"","raw":null,"photos":[],"categories":[{"name":"面向对象编程","slug":"面向对象编程","count":8,"path":"api/categories/面向对象编程.json"}],"tags":[{"name":"Cpp对C的扩展","slug":"Cpp对C的扩展","count":8,"path":"api/tags/Cpp对C的扩展.json"}]},{"title":"07_C++对C的函数扩展","slug":"C++/C++对C的函数扩展 ","date":"2017-04-18T07:20:56.000Z","updated":"2018-05-06T16:24:18.845Z","comments":true,"path":"api/articles/C++/C++对C的函数扩展 .json","excerpt":"<p><strong>1 inline内联函数</strong> √<br><strong>2 默认参数</strong> √<br><strong>3 函数占位参数</strong> √<br><strong>4 默认参数和占位参数</strong> √<br><strong>5 函数重载（Overroad）</strong> √</p>","keywords":null,"cover":null,"content":null,"text":"1 inline内联函数 √<br>2 默认参数 √<br>3 函数占位参数 √<br>4 默认参数和占位参数 √<br>5 函数重载（Overroad） √一. inline内联函数C++中的const常量可以替代宏常数定义，如：<br>const int A = 3;  #d","link":"","raw":null,"photos":[],"categories":[{"name":"面向对象编程","slug":"面向对象编程","count":8,"path":"api/categories/面向对象编程.json"}],"tags":[{"name":"Cpp对C的扩展","slug":"Cpp对C的扩展","count":8,"path":"api/tags/Cpp对C的扩展.json"}]}]}