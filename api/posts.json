{"total":12,"pageSize":5,"pageCount":3,"data":[{"title":"电子纸驱动的编写","slug":"电子纸驱动","date":"2018-05-10T06:00:15.000Z","updated":"2018-05-16T06:34:00.196Z","comments":true,"path":"api/articles/电子纸驱动.json","excerpt":"<p>MCU：STM32L053<br>显示器：GDE021A1<br>","keywords":null,"cover":"https://wx2.sinaimg.cn/mw690/83c47ac5ly1frav8u2pbfj20a00a0wie.jpg","content":null,"text":"MCU：STM32L053<br>显示器：GDE021A1<br> [Figure] ","link":"","raw":null,"photos":[],"categories":[{"name":"电子纸","slug":"电子纸","count":1,"path":"api/categories/电子纸.json"}],"tags":[{"name":"STM32","slug":"STM32","count":1,"path":"api/tags/STM32.json"}]},{"title":"ARM_01_嵌入式系统概述","slug":"ARM_01","date":"2018-02-01T06:00:15.000Z","updated":"2018-05-06T16:23:34.922Z","comments":true,"path":"api/articles/ARM_01.json","excerpt":"<p><strong>1 嵌入式的概念</strong> √<br><strong>2 嵌入式系统的特点</strong> √<br><strong>3 嵌入式系统的组成</strong> √<br><strong>4 ARM内核种类</strong> √<br><strong>5 ARM内核内部的寄存器</strong> √</p>","keywords":null,"cover":null,"content":null,"text":"1 嵌入式的概念 √<br>2 嵌入式系统的特点 √<br>3 嵌入式系统的组成 √<br>4 ARM内核种类 √<br>5 ARM内核内部的寄存器 √前言我对于ARM的学习是基于ARM公司 CotexA9 架构处理器核心 samsung（三星公司） 提供的一款型号为 Exyno","link":"","raw":null,"photos":[],"categories":[{"name":"嵌入式","slug":"嵌入式","count":1,"path":"api/categories/嵌入式.json"}],"tags":[{"name":"ARM","slug":"ARM","count":1,"path":"api/tags/ARM.json"}]},{"title":"08_C++对C的扩展-终","slug":"C++对C的扩展-终","date":"2017-04-19T12:58:03.000Z","updated":"2018-04-23T16:19:15.427Z","comments":true,"path":"api/articles/C++对C的扩展-终.json","excerpt":"<p><strong>1  C++语言对C语言扩充和增强的几点具体体现</strong> √<br><strong>2 C语言register关键字—最快的关键字</strong> √</p>","keywords":null,"cover":null,"content":null,"text":"1  C++语言对C语言扩充和增强的几点具体体现 √<br>2 C语言register关键字—最快的关键字 √一. C++语言对C语言扩充和增强的几点具体体现1 更加灵活的变量说明在传统的语言中，局部支量的说明必须集中放在执行代码的前面（早期C标准），数据说明语句和执行语句的混合","link":"","raw":null,"photos":[],"categories":[{"name":"面向对象编程","slug":"面向对象编程","count":8,"path":"api/categories/面向对象编程.json"}],"tags":[{"name":"Cpp对C的扩展","slug":"Cpp对C的扩展","count":8,"path":"api/tags/Cpp对C的扩展.json"}]},{"title":"07_C++对C的函数扩展","slug":"C++对C的函数扩展 ","date":"2017-04-18T07:20:56.000Z","updated":"2018-05-06T16:24:18.845Z","comments":true,"path":"api/articles/C++对C的函数扩展 .json","excerpt":"<p><strong>1 inline内联函数</strong> √<br><strong>2 默认参数</strong> √<br><strong>3 函数占位参数</strong> √<br><strong>4 默认参数和占位参数</strong> √<br><strong>5 函数重载（Overroad）</strong> √</p>","keywords":null,"cover":null,"content":null,"text":"1 inline内联函数 √<br>2 默认参数 √<br>3 函数占位参数 √<br>4 默认参数和占位参数 √<br>5 函数重载（Overroad） √一. inline内联函数C++中的const常量可以替代宏常数定义，如：<br>const int A = 3;  #d","link":"","raw":null,"photos":[],"categories":[{"name":"面向对象编程","slug":"面向对象编程","count":8,"path":"api/categories/面向对象编程.json"}],"tags":[{"name":"Cpp对C的扩展","slug":"Cpp对C的扩展","count":8,"path":"api/tags/Cpp对C的扩展.json"}]},{"title":"06_C++引用","slug":"C++引用","date":"2017-04-16T11:15:29.000Z","updated":"2018-05-06T16:25:46.920Z","comments":true,"path":"api/articles/C++引用.json","excerpt":"<p><strong>1 引用（普通引用）</strong> √<br><strong>2 常引用</strong> √<br><strong>3 const引用结论</strong> √<br><strong>4 const修饰类</strong> √<br><strong>5 综合练习</strong> √<br>","keywords":null,"cover":null,"content":null,"text":"1 引用（普通引用） √<br>2 常引用 √<br>3 const引用结论 √<br>4 const修饰类 √<br>5 综合练习 √<br>一. 引用（普通引用）变量名回顾<br>变量名实质上是一段连续存储空间的别名，是一个标号(门牌号)<br>程序中通过变量来申请并命名内存","link":"","raw":null,"photos":[],"categories":[{"name":"面向对象编程","slug":"面向对象编程","count":8,"path":"api/categories/面向对象编程.json"}],"tags":[{"name":"Cpp对C的扩展","slug":"Cpp对C的扩展","count":8,"path":"api/tags/Cpp对C的扩展.json"}]}]}