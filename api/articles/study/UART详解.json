{"title":"UART详解","slug":"study/UART详解","date":"2018-10-09T08:36:30.000Z","updated":"2018-10-21T08:34:12.077Z","comments":true,"path":"api/articles/study/UART详解.json","photos":[],"link":"","excerpt":"#前言​    ​    一直以来对URAT协议总是一知半解掌握不够全面，借着这次通过FPGA对E-Fuse的烧录，做一次较全面的学习总结。","covers":["http://os5qaz99w.bkt.clouddn.com/SerialPort-Pin-Description.png","http://os5qaz99w.bkt.clouddn.com/USB--TTL%28CH340%29.PNG","http://os5qaz99w.bkt.clouddn.com/TTL-UART.PNG","http://os5qaz99w.bkt.clouddn.com/change-USB--RS232.png","http://os5qaz99w.bkt.clouddn.com/RS232-UART.PNG"],"content":"<p>#前言</p>\n<p>​    </p>\n<p>​    一直以来对URAT协议总是一知半解掌握不够全面，借着这次通过FPGA对E-Fuse的烧录，做一次较全面的学习总结。</p>\n<a id=\"more\"></a>\n<h1 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h1><p>​    通用异步收发传输器（Universal Asynchronous Receiver/Transmitter)，通常称作UART，是一种异步收发传输器。采用异步串口通信协议，该总线<strong>一对一</strong>双向通信，可以实现全双工传输和接收。</p>\n<h2 id=\"串口引脚定义\"><a href=\"#串口引脚定义\" class=\"headerlink\" title=\"串口引脚定义\"></a>串口引脚定义</h2><p><img src=\"http://os5qaz99w.bkt.clouddn.com/SerialPort-Pin-Description.png\" alt=\"\"></p>\n<p>##电平及转换</p>\n<p>UART是一种通信协议，有多种逻辑电平实现方式，如常见的：</p>\n<p>​    TTL电平：0V–逻辑0（通常&lt;+0.2V即可），+5V逻辑1（通常&gt;+2.4即可）</p>\n<blockquote>\n<p>TTL使用注意：TTL电平一般过冲都会比较严重，可能在始端串22欧或33欧电阻；TTL电平输入脚悬空时是内部认为是高电平。要下拉的话应用1k以下电阻下拉。TTL输出不能驱动CMOS输入。</p>\n</blockquote>\n<p>​    RS232电平：-3V ~ -15V–逻辑1，+3V ~ +15V–逻辑0（负逻辑电平 ）</p>\n<p>常用<strong>互转</strong>芯片：</p>\n<p>​    USB转TTL的UART：CH340芯片，CP2102芯片，</p>\n<p>​    TTL转RS232：MAX232芯片</p>\n<p>​    USB转RS232：PL2303芯片</p>\n<p>​     USB转TTL(USB差分信号转TTL电平)</p>\n<blockquote>\n<p>关于PL2303还遗留的疑问：<a href=\"https://blog.csdn.net/u012627502/article/details/41597745\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/u012627502/article/details/41597745</a></p>\n</blockquote>\n<blockquote>\n<p>RS232协议包括数据格式和电气连接两部分。</p>\n<p>用转换芯片接的是电脑的USB口又不是串口，所以电气协议部分就不需要了。只需用数据格式就行了，TTL电平刚好跟MCU匹配。手册里说的232是指数据格式而不包括232的电平协议。转换的是协议,不是电平;</p>\n<p>RS-232分TX/RX，全双工的，可以同时收发；</p>\n<p>USB只有一对差分数据线D+/D-,是半双工的；**</p>\n</blockquote>\n<p>使用这些芯片能够将电平进行相互转换，实现不同逻辑电平间的通信。</p>\n<blockquote>\n<p>与预期不符的疑问：在使用逻辑分析仪或示波器捕获usb转串口后发出来的信号，电平出现了反转，与预期不符，但解析仍然正确。<del>猜测该usb转串口使用的可能是PL2303</del>，经核实采用的是CH340。</p>\n</blockquote>\n<h2 id=\"格式帧\"><a href=\"#格式帧\" class=\"headerlink\" title=\"格式帧\"></a>格式帧</h2><blockquote>\n<p>每组数据为一帧，所以数据是一帧一帧地传输的。<br>帧的格式通常为：<strong>起始位+数据位+校验位+停止位</strong>，其中起始位1bit，数据位可以是5、6、7、8bit，校验位可以不设置（通常也不设置），停止位可以是1、1.5、2bit。<br><strong>起始位</strong>：是一个<strong>逻辑值为0</strong>的位，所以对于正逻辑的TTL电平，起始位是低电平；<br><strong>数据位</strong>：协议规定传输时LSB first。（当然也有例外，但很很少是MSB first）<br><strong>停止位</strong>：是逻辑值为1；<br><strong>空闲状态</strong>：逻辑值1；</p>\n</blockquote>\n<p>数据传输流程如下：</p>\n<ol>\n<li>平时数据线处于空闲状态（1状态）</li>\n<li>当要发送数据时，UART改变TxD数据线的状态（变为0状态）并维持1位的时间，这样接收方检测到开始位后，在等待1.5位的时间就开始一位一位地检测数据线的状态得到所传输的数据。</li>\n<li>UART一帧中可以有5、6、7或8位的数据，发送方一位一位地改变数据线的状态将他们发送出去，首先发送最低位。</li>\n<li>如果使用校验功能，UART在发送完数据后，还要发送1位校验位。有两种校验方法：奇校验、偶校验——数据位连同校验位中，1的数据等于奇数或偶数。</li>\n<li>最后，发送停止位，数据线恢复到空闲状态（1状态）。停止位的长度有3种：1位、1.5位、2位。</li>\n</ol>\n<p>TTL电平下的UART</p>\n<blockquote>\n<p>USB -&gt; UART(TTL)，所使用的转换芯片是CH340G。</p>\n<p>装置如图：<img src=\"http://os5qaz99w.bkt.clouddn.com/USB--TTL%28CH340%29.PNG\" alt=\"USB-&gt;TTL\"></p>\n<p>帧格式：9600，8bit，none，1bit</p>\n</blockquote>\n<p><img src=\"http://os5qaz99w.bkt.clouddn.com/TTL-UART.PNG\" alt=\"TTL-UART\"></p>\n<p>RS232电平下的UART</p>\n<blockquote>\n<p>USB-&gt;UART(RS232)所使用的转换芯片未知</p>\n<p>装置如图：<img src=\"http://os5qaz99w.bkt.clouddn.com/change-USB--RS232.png\" alt=\"\"></p>\n<p>帧格式：9600，8bit，none，1bit</p>\n</blockquote>\n<p><img src=\"http://os5qaz99w.bkt.clouddn.com/RS232-UART.PNG\" alt=\"RS232-UART\"></p>\n<h1 id=\"UART协议\"><a href=\"#UART协议\" class=\"headerlink\" title=\"UART协议\"></a>UART协议</h1><p>上面扯了这么多，总结如下：</p>\n<p>协议包括<strong>数据帧格式</strong>和<strong>电气连接</strong></p>\n<h2 id=\"数据帧格式\"><a href=\"#数据帧格式\" class=\"headerlink\" title=\"数据帧格式\"></a>数据帧格式</h2><ol>\n<li>空闲状态时为逻辑1；</li>\n<li>起始位为逻辑0；</li>\n<li>数据位规定是LSB first；</li>\n<li>校验位分为EVEN or ODD（通常不设置）；</li>\n<li>停止位为逻辑0；</li>\n</ol>\n<h2 id=\"电气连接\"><a href=\"#电气连接\" class=\"headerlink\" title=\"电气连接\"></a>电气连接</h2><p>主要分成两种逻辑电平：TTL和RS232；</p>\n<p>逻辑电平标准的不同表现在不同逻辑值会有不一样的电平表现，在使用示波器或逻辑分析仪采样时，能够观察到这点。</p>\n<p>如：逻辑0为低电平，低电平在TTL电平中为0V（&lt;0.2V）,但经过RS232电平解析逻辑0低电平则为+3V，所以才会出现上图中相同十六进制数0xAD在不同逻辑电平传输下表现波形不同（恰好相反）。</p>\n<p>同样空闲状态逻辑1在RS232电平下则为-3V，从示波器上给人的感觉是低电平，其实这是RS232的高电平，所以解决了上面<strong>与预期不符的疑问</strong>。</p>\n<h1 id=\"参考连接\"><a href=\"#参考连接\" class=\"headerlink\" title=\"参考连接\"></a>参考连接</h1><p>p.s参考连接里的文章个人认为有部分内容错误。</p>\n","categories":[{"name":"协议与约定","slug":"协议与约定","count":2,"path":"api/categories/协议与约定.json"}],"tags":[{"name":"协议与约定 UART","slug":"协议与约定-UART","count":1,"path":"api/tags/协议与约定-UART.json"}]}