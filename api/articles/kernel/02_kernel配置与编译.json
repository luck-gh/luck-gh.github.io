{"title":"02_kernel配置与编译","slug":"kernel/02_kernel配置与编译","date":"2017-10-16T09:53:24.000Z","updated":"2018-10-21T08:50:01.612Z","comments":true,"path":"api/articles/kernel/02_kernel配置与编译.json","photos":[],"link":"","excerpt":"简介：配置编译内核，怎么管理这个大工程，首先内核包含了不同领域的硬件驱动，一开始下载的内核不能直接使用，默认的内核选择的驱动、架构、编译模式与当前环境不同，而且不使用的驱动不需要编译（裁剪很重要，成本很重要）。","covers":null,"content":"<h1 id=\"简介：\"><a href=\"#简介：\" class=\"headerlink\" title=\"简介：\"></a>简介：</h1><p>配置编译内核，怎么管理这个大工程，首先内核包含了不同领域的硬件驱动，一开始下载的内核不能直接使用，默认的内核选择的驱动、架构、编译模式与当前环境不同，而且不使用的驱动不需要编译（裁剪很重要，成本很重要）。</p>\n<a id=\"more\"></a>\n<hr>\n<h1 id=\"根据执行的硬件环境配置内核\"><a href=\"#根据执行的硬件环境配置内核\" class=\"headerlink\" title=\"根据执行的硬件环境配置内核\"></a>根据执行的硬件环境配置内核</h1><hr>\n<h1 id=\"移植\"><a href=\"#移植\" class=\"headerlink\" title=\"移植\"></a>移植</h1><hr>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><p>在内核代码根目录执行 <code>make menuconfig</code>进入图形化菜单（基于<code>mconf</code>画图工具）。配置完成后当前目录完成后多出一个<code>.config</code>文件，之后生产<code>Makefile</code>使用的文件与一个<code>.h</code>文件。<br>这个图形化界面是根据<code>Kconfig</code>文件画出来的。（<code>Kconfig</code>是菜单，<code>.config</code>是菜谱）</p>\n<hr>\n<h1 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h1><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make -j2</span><br><span class=\"line\"><span class=\"regexp\">//</span>开两个线程编译</span><br><span class=\"line\"><span class=\"regexp\">//</span>Kernel：arch<span class=\"regexp\">/arm/</span>boot<span class=\"regexp\">/zImage is ready</span></span><br></pre></td></tr></table></figure>\n<p><code>Ubuntu</code>中途会出错，<br>测试是否可用<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp arch<span class=\"regexp\">/arm/</span>boot<span class=\"regexp\">/zImage  /</span>rootfs/</span><br><span class=\"line\"><span class=\"comment\">//rootfs 需要经映射到开发板，如下</span></span><br><span class=\"line\">sudo kermit</span><br><span class=\"line\"><span class=\"comment\">//进入kermit命令行</span></span><br><span class=\"line\">mount -t nfs -o nolock,rw <span class=\"number\">192.168</span>.x.<span class=\"string\">xxx:</span><span class=\"regexp\">/rootfs /</span>mnt</span><br><span class=\"line\">mount <span class=\"regexp\">/dev/</span>mmcblkop2  /opt</span><br><span class=\"line\"><span class=\"comment\">//挂载第二分区</span></span><br><span class=\"line\">cp <span class=\"regexp\">/mnt/</span>zImage  <span class=\"regexp\">/opt/</span></span><br><span class=\"line\">umount <span class=\"regexp\">/opt/</span></span><br><span class=\"line\">umount <span class=\"regexp\">/mnt/</span></span><br><span class=\"line\">reboot</span><br><span class=\"line\"><span class=\"comment\">//ctrl + / + c退出kermiting命令行</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"逆推编译过程\"><a href=\"#逆推编译过程\" class=\"headerlink\" title=\"逆推编译过程\"></a>逆推编译过程</h2><ul>\n<li><code>zImage</code>的由来，<code>OBJCOPY</code>给内核文件去头生成<code>zImage</code>;</li>\n<li><code>vmlinux</code>链接完成后压缩后的内核，连接工具链接源码目录每一个子目录的<code>built-in.o</code>;</li>\n<li><p><code>built-in.o</code>每一个目录下的所有<code>.c</code>文件编译成的<code>.o</code>打包生成的，并且每一级目录都会递归生成这个文件。</p>\n<blockquote>\n<p>直观的看压缩：<br>压缩前<code>/linux-3.5/vmlinux</code>  大小118M<br>压缩后<code>/arch /arm/boot/compressed/vmlinux</code>  大小4.9M<br><code>compressed</code>放的为亚索解压缩算法<br>去头<code>/arch/arm/boot/zImage</code>  大小4.8M</p>\n</blockquote>\n</li>\n</ul>\n<hr>\n<h1 id=\"Makefile与Kconfig语法\"><a href=\"#Makefile与Kconfig语法\" class=\"headerlink\" title=\"Makefile与Kconfig语法\"></a>Makefile与Kconfig语法</h1><p><code>make menuconfig</code><br>进入图形化界面可以光标选择是否加入某些模块。<br>在界面中可找到驱动源码路径（Help选项最下面）<br><code>Defined at xxx</code> 配置定义路径(精确到行)<br><code>Location</code>驱动源码路径(精确到目录)</p>\n<p>在其设置后会在<code>.config</code>文件中改变变量参数（给变量赋值<code>Y</code>或者注释变量），并在配置定义中的文件使用该变量。<br><code>Makefile</code>中的<code>.O</code>文件的添加。（<code>obj-$(xxx)</code>，xxx为变量，为<code>Y</code>时则编译，<code>M</code>为编译为模块）</p>\n<h2 id=\"Kconfig语法\"><a href=\"#Kconfig语法\" class=\"headerlink\" title=\"Kconfig语法\"></a><code>Kconfig</code>语法</h2><p>关键字</p>\n<ul>\n<li><code>menuconfig</code>：菜单配置，组织菜单分层</li>\n<li><code>config</code>：子菜单</li>\n<li><code>if/endif</code>：成对出现，参数为“菜单名”</li>\n<li><code>range</code>：范围，限制变量范围，放在提示字符串之下</li>\n<li><code>default</code>：设定默认值</li>\n<li><code>menu/endmenu</code>：用于组织菜单，没有变量，相当于建立目录。</li>\n<li><code>select</code>：强行选择（选择模块1自动选择模块2，且无法更改）</li>\n<li><code>depends on</code>：依赖选择（选择模块1才会出现模块2的选项）</li>\n<li><code>choice/endchoice</code>：多选一（多个模块中只能选择其中一个）</li>\n<li><code>source</code>：加载后面字符串路径的<code>Kconfig</code></li>\n<li><code>prompt</code>：在类型后加入的字符串显示，也可不写该关键字</li>\n<li><code>help</code>：帮助菜单，在配置擦你但的最后使用，且在其两件个加上三个<code>-</code></li>\n<li><code>comment</code>：注释，出现的位置遵循队列逻辑，且会自动在其前后加上<code>*</code></li>\n</ul>\n<p>类型</p>\n<ul>\n<li><code>bool</code>：双态，编译，不编译（方括号的选项）</li>\n<li><code>tristate</code>：三态，编译，不编译，编译为模块（尖括号的选项）</li>\n<li><code>hex</code>：十六进制整形，可输入0-E（小括号的选项）</li>\n<li><code>int</code>：十进制的整形变量（小括号的选项）</li>\n<li><code>string</code>：字符串型变量（小括号的选项）</li>\n</ul>\n<p>eg:<br>建立<code>Kconfig</code>文件<br>使用<code>./scripts/kconfig/mconf</code>（由多个<code>.O</code>生成的画图工具）打开。<br>添加到想要添加的设备名的配置定义（<code>source</code>位置）之下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menuconfig ARM_DRV</span><br><span class=\"line\">\tbool &quot;ARM driver&quot;</span><br><span class=\"line\">\t---help---</span><br><span class=\"line\">\tHere&apos;s an introduction to the device</span><br><span class=\"line\">\t</span><br><span class=\"line\">if ARM_DRV</span><br><span class=\"line\"></span><br><span class=\"line\">menu &quot;About kconfig base syntax learning&quot;</span><br><span class=\"line\">\t</span><br><span class=\"line\">comment “The LED is on core board”</span><br><span class=\"line\">config LED</span><br><span class=\"line\">\t\ttristate</span><br><span class=\"line\">\t\tprompt “LED driver”</span><br><span class=\"line\">\t\t---help---</span><br><span class=\"line\">\t\tNothing</span><br><span class=\"line\"></span><br><span class=\"line\">config LED_NUM</span><br><span class=\"line\">\t\tint “The Number of LED on”</span><br><span class=\"line\">\t\tdefault 6</span><br><span class=\"line\">\t\trange 1 32</span><br><span class=\"line\">\t\t---help---</span><br><span class=\"line\">\t\tthe range is 1-32</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">config DEBUG</span><br><span class=\"line\">\t\tsteing &quot;It is as a error debue info&quot;</span><br><span class=\"line\">\t\t---help---</span><br><span class=\"line\">\t\tnothing </span><br><span class=\"line\"></span><br><span class=\"line\">endmenu</span><br><span class=\"line\"></span><br><span class=\"line\">menu &quot;About keywords:select,choice,depends on&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">config MQ2</span><br><span class=\"line\">\t\tbool &quot;MQ-2 driver&quot;</span><br><span class=\"line\">\t\tselect BEEP</span><br><span class=\"line\">\t\t---help---</span><br><span class=\"line\">\t\tnothing </span><br><span class=\"line\">#BEEP可以单独选择，但是选择了MQ2后BEEP默认选择，且无法更改</span><br><span class=\"line\">config BEEP</span><br><span class=\"line\">\t\tbool &quot;BEEP driver&quot;</span><br><span class=\"line\">\t\t---help---</span><br><span class=\"line\">\t\tnothing </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">config CHILD_DRV</span><br><span class=\"line\">\t\tbool &quot;simulate a child device driver&quot;</span><br><span class=\"line\">\t\tdepends on PAERNT_DRV</span><br><span class=\"line\">\t\t---help---</span><br><span class=\"line\">\t\tnothing </span><br><span class=\"line\">#选择了PAERNT_DRV才会出现CHILD_DRV</span><br><span class=\"line\">config PAERNT_DRV</span><br><span class=\"line\">\t\tbool &quot;simulate a parent device driver&quot;</span><br><span class=\"line\">\t\t---help---</span><br><span class=\"line\">\t\tnothing </span><br><span class=\"line\"></span><br><span class=\"line\">choice </span><br><span class=\"line\">\tprompt &quot;choose a type of touchsrceen driver&quot;</span><br><span class=\"line\">config MITS1</span><br><span class=\"line\">\t\tbool &quot;ts 1 driver&quot;</span><br><span class=\"line\">\t\t---help---</span><br><span class=\"line\">\t\tnothing </span><br><span class=\"line\">\t\t</span><br><span class=\"line\">config MITS2</span><br><span class=\"line\">\t\tbool &quot;ts 2 driver&quot;</span><br><span class=\"line\">\t\t---help---</span><br><span class=\"line\">\t\tnothing </span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">endmenu</span><br><span class=\"line\"></span><br><span class=\"line\">endif</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Kconfig-与Makefile、C文件如何交互\"><a href=\"#Kconfig-与Makefile、C文件如何交互\" class=\"headerlink\" title=\"Kconfig 与Makefile、C文件如何交互\"></a>Kconfig 与Makefile、C文件如何交互</h2><p>首先<code>make</code>后<code>.config</code> 生成另外两个文件。</p>\n<ul>\n<li><code>./include/config/auto.conf</code>这个文件与<code>.config</code>的区别是去掉了注释。<br>在当前内核根目录(<code>Linux-3.5/</code>)的<code>Makeflie</code>中有包含<code>auto.conf</code>即迁至可使用后者的变量。</li>\n<li><code>inclide/generated/autocof.h</code> 将<code>auto.conf</code>中的变量改为宏定义。<br>eg:接之前的<code>.config</code><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;linux/init.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;linux/module.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> __<span class=\"function\">init <span class=\"title\">demo_init</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">195</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(i--) &#123;</span><br><span class=\"line\">        printk(<span class=\"string\">\"milednum:%d --&gt; %s\\n\"</span>,CONFIG_LED_NUM,</span><br><span class=\"line\">        \t\t\t\t\t\t\tCONFIG_DEBUG);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">module_init(demo_init);<span class=\"comment\">//指定入口</span></span><br><span class=\"line\"></span><br><span class=\"line\">MODULE_LICENSE(<span class=\"string\">\"GPL\"</span>);<span class=\"comment\">//许可声明</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>建立<code>Makefile</code>并于上级关联(直接<code>obj-$(CONFIG_ARM_DRV) += 目录名</code>)<br><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">obj-<span class=\"variable\">$(CONFIG_MQ2)</span>\t\t\t+= c文件名.o</span><br></pre></td></tr></table></figure></p>\n","categories":[{"name":"KERNEL","slug":"KERNEL","count":2,"path":"api/categories/KERNEL.json"}],"tags":[{"name":"kernel Linux","slug":"kernel-Linux","count":2,"path":"api/tags/kernel-Linux.json"}]}